/*
 *      자바 => 클래스 기반
 *             ----
 *             1. 구성요소
 *                = 변수 : 기본형 데이터 (int , long ... double..)
 *                      : 참조형 데이터
 *                = 메소드
 *                = 생성자
 *                -----------------------------------------(+객체지향)
 *             2. 메소드 : 특정 작업을 수행하는 일련의 명령문의 집합 (클릭, 로그인, 불러오기 등...모든행동이 다 메소드임)
 *                       ------한가지 기능 수행이 가능하게 만든다
 *                             -----------
 *                                 |수정,추가(다형성)
 *                          | 주로 사용처 
 *                            (클래스와 클래스를 연결)
 *                          | 사용하는 이유
 *                            => 재사용
 *                            => 유지보수(추가,수정) => 가독성
 *                            => 문장 => 단락을 나눠줘야함 => 구조적인 프로그램
 *                            => 중복 코드 제거
 *                          | 메소드 구조
 *                            구성요소 : 리턴형, 메소드명, 매개변수(인자)
 *                            [접근지정어][옵션] 리턴형 메소드(매개변수)
 *                                          ---------  -----
 *                                          1개만사용     0개이상
 *                                          
 *                            = 선언부/구현부
 *                            리턴형 메소드(매개변수)//=>선언부 예외적으로 (abstract)는 선언만 해도 사용가능
 *                            {
 *                               //구현부 -> 구현해야 메모리에 저장됨
 *                            }
 *                            -------*수업중에 구현한 방식이 "정답"은 아님
 *                                    따라서 본인의 스타일을 구현할 필요가 있음
 *                            a 리턴형 => 한개의 데이터만 설정
 *                                     ----------기본형, 배열, 클래스
 *                                                          ex.String => 사용자 정의
 *                              = 메소드 자체에서 처리 => void(결과값이 없는 경우)
 *                              = 호출후에 처리 => 리턴형이 존재
 *                            b 매개변수 => 기본형, 참조형(배열,클래스)
 *                                    => 여러개 사용 가능(3개이상 넘어가면 참조형 이용)
 *                                    => 사용자가 요청에 필요한 데이터 
 *                            c 메소드명 => 식별자를 이용한다.
 *                            -
 *                            이 a~c 3가지가 모여서 사용자 요청에 대한 처리 (한가지 기능)수행
 *                            -----------------------------------------------
 *                            = void method()
 *                              {
 *                                 return; //생략 => 메소드 처리 종료
 *                                           ---컴파일러가 자동으로 추가해줌
 *                              }
 *                            = int method()
 *                              {
 *                                 return 정수;
 *                                        ---동일한 크기로 설정하길 추천
 *                              }
 *                            = String method() 
 *                              {
 *                                 return "문자열";
 *                              }
 *                            = int[] method()
 *                              {
 *                                 int[] arr=new int[10];
 *                                 return arr;
 *                              }
 *                            
 *              3. 메소드 유형
 *                 *** 메소드안에 선언된 변수는 해당 메소드에서만 사용이 가능
 *                     void method()
 *                     {
 *                         int a=10; => 지역변수 (반드시 초기화후에 사용이 가능)
 *                     }//a는 메모리 해제(메모리 자체에서 해제:지역변수 => stack)
 *                     *** 매개변수는 지역변수와 동일 취급(메소드 종료시 사용불가)
 *                     *** return은 메소드 종료를 알려준다
 *                     *** 메소드 블록 닫기전에 return을 사용한다.(->간혹 중간에 사용도 가능해서 종료도 가능)
 *             ------------------------------------
 *                   리턴형              매개변수
 *             ------------------------------------
 *                    O                  O
 *                    ex. String substring(int start)
 *             ------------------------------------
 *                    O                  X
 *                    ex. String trim()
 *                       double random()
 *             ------------------------------------
 *                    X                  O
 *                    ex. void main(String[] arg)
 *                        void println(String s)
 *             ------------------------------------
 *                    X                  X
 *                    ex. void println()
 *             ------------------------------------
 *             => 결과값이 없는 경우에는 반드시 void
 *                주로 오라클 연결(insert, update,delete)
 *                    CRUD...에 쓰임
 *             => 메소드(행위,동작) => 동작에 대한 처리...
 *            
 */
public class 메소드_1 {
//[접근지정어] [옵션]
	public static void main(String[] args) {
		
	}

}
