/*
 *      프로그램                   ----영구적 저장---
 *      1. 데이터 관리 (메모리에 저장, 파일 저장, RDMS저장)
 *         --------
 *         1) 데이터 저장
 *            = 한개 저장 : 변수
 *            --------------------------
 *            = 같은 데이터 여러개 저장 : 배열
 *            = 다른 데이터 여러개 저장 : 클래스
 *              => 메모리 주소를 이용하는 프로그램
 *                (-------=참조변수 => 사용자정의데이터형)
 *            -------------------------- 관련된 데이터를 모아서 관리
 *            
 *         2) 데이터 가공
 *            = 명령문 => ;
 *            = 연산자
 *            = 제어문
 *            -----------해당 3가지를 묶어서 처리하는것 = 메소드
 *            
 *         3) 가공된 데이터 출력
 *            = 명령프롬포트 / 윈도우 => Application
 *            = 브라우저 => Web Application
 *              ------------------------=웹
 *            = 모바일 => Mobile Application (=kotlin)
 *            ==============================둘다 문법형식은 동일
 *            = Front-End (React, Vue)
 *                         -----React-Query
 *                         
 *      2. 데이터 관리를 위한 사용자 정의 데이터형
 *         1) 클래스의 구성요소
 *            = class ClassName
 *              {
 *                  -----------
 *                 !① 변수 설정 => 프로그램 종료시까지 사용이 가능
 *                            => 지역변수 : 메소드 종료시 사라지는 변수
 *                               -> 리턴형, 매개변수
 *                            => 전역변수  
 *                               -> 리턴형, 매개변수가 단순해 진다.
 *                               = 공유변수
 *                               = 인스턴스 변수
 *                  -----------
 *                  ② 생성자 설정 : 변수에 대한 초기화
 *                    => 여러개 사용이 가능 , 사용하지 않는 경우
 *                                       ------------
 *                                             |
 *                                      컴파일러에 의해 자동생성
 *                  -----------
 *                 !③ 메소드 설정
 *                  -----------
 *              }
 *         2) 클래스의 변수의 종류
 *            클래스 영역에 선언하는 변수 => 멤버변수 ===> heap에 저장됨
 *                                  : 인스턴스 (객체) 변수 => new를 사용할때마다 따로저장 (heap에 저장)
 *                                  : 클래스 변수 => 공유변수 => static => (Method area에 저장)
 *            *자바의 메모리
 *            ------------------------
 *             Method Area (static)
 *             => 메소드 저장, static 변수
 *            ------------------------
 *             Heap
 *             => 인스턴스 변수 (멤버변수)   =====> 프로그래머가 메모리에 저장, 해제(GC:자동메모리해제)
 *                                                               또는 System.gc()를 사용해 임의로 해제
 *            ------------------------
 *             Stack
 *             => 지역변수, 매개변수        =====> 블록변수 {} => 메모리 자체 관리
 *            ------------------------
 *            
 *         ------------------------------------------------------------   
 *              변수유형        선언위치        메모리저장        사용범위
 *         ------------------------------------------------------------ 
 *          ① 인스턴스변수 : 클래스를 메모리에 저장한 상태  
 *                     : class ClassName
 *                       {
 *                           int a;
 *                       }
 *                     : new -> 새로운 공간이 생성 => 클래스 전체
 *                       
 *          ② 정적변수(앞에static붙은거)
 *                 : class ClassName
 *                   {
 *                       static int a;
 *                   } 
 *                 : 컴파일시에 자동 생성
 *                   
 *          ③ 지역변수 : 메소드 호출시마다 생성
 *                    메소드안에서 사용이 가능
 *                  : class ClassName
 *                    {
 *                        void display()
 *                        {
 *                            int a;
 *                        }
 *                    }
 *                  : 메소드 안에서 사용이 가능
 *          **비행기게임에서 비행기위치값은 인스턴스변수 점수는 정적변수
 *          
 *          [메모리 저장]
 *          인스턴스 : 메모리에 저장된 상태(객체:클래스에 대한 변수명=>메모리주소)
 *                : class A
 *                 
 *                     ---메모리크기를확인->메모리확보->확보된 메모리주소 넘겨주는 역할
 *                 A a=new A()
 *                         ---생성자(멤버변수에 대한 초기화)
 *                     -------초기값 
 *          클래스 : 설계 (필요한 데이터를 모아준다)
 *               : 메모리에 저장 => 활용 => 메모리 해제
 *               ***클래스는 한개의 정보를 모아둔곳 : 형식(틀)만 만들고 데이터는 계속 바꿀수 있도록 만들어야함
 *               : class Movie
 *                 {
 *                    -----
 *                    -----
 *                    -----
 *                 }
 *                 **한개의 데이터형(틀)을 만들고
 *                 Movie m1=new Movie();
 *                 Movie m2=new Movie();
 *                 Movie m3=new Movie();
 *                 ...
 *                 ...
 *                 **각각의 영화를 저장할수 있도록 데이터를 따로 저장함
 *                 [활용시]
 *                  m1.변수명(.은주소접근연산자)
 *                 [해제시]
 *                  m1=null
 *         ------------------------------------------------------------ 
 *         **오늘 이후 이번주에 나갈 내용**   
 *         3) 메소드 처리 방법
 *         4) 생성자 확인
 *         5) 초기화 블록
 *         6) 클래스의 종류
 *         7) 라이브러리
 *         8) 예외처리
 */
public class MainClass {

	public static void main(String[] args) {
		// TODO Auto-generated method stub

	}

}
